import gradio as gr
import os
from wan_api import DashScopeClient


def generate_video(api_key, prompt, duration, resolution, fps, seed, progress=gr.Progress()):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ DashScope SDK (Alibaba WAN 2.5)
    
    Args:
        api_key: API-–∫–ª—é—á DashScope (—Ñ–æ—Ä–º–∞—Ç sk-...)
        prompt: –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
        duration: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        resolution: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤–∏–¥–µ–æ (—Ñ–æ—Ä–º–∞—Ç: "1920x1080")
        fps: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
        seed: Seed –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        
    Returns:
        –ü—É—Ç—å –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –≤–∏–¥–µ–æ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    """
    try:
        progress(0, desc="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ DashScope
        client = DashScopeClient(api_key=api_key)
        
        progress(0.1, desc="–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ DashScope...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
        if not client.check_health():
            return None, "‚ùå –û—à–∏–±–∫–∞: –°–µ—Ä–≤–∏—Å DashScope –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API-–∫–ª—é—á."
        
        progress(0.2, desc="–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
        
        # –†–∞–∑–±–æ—Ä —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        width, height = map(int, resolution.split('x'))
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
        task_id = client.submit_generation(
            prompt=prompt,
            duration=duration,
            width=width,
            height=height,
            fps=fps,
            seed=seed if seed > 0 else None
        )
        
        if not task_id:
            return None, "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é."
        
        progress(0.3, desc=f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ (ID: {task_id})...")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        video_path = client.wait_for_completion(
            task_id, 
            progress_callback=lambda p: progress(0.3 + p * 0.6, desc="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ...")
        )
        
        if video_path:
            progress(1.0, desc="–ì–æ—Ç–æ–≤–æ!")
            return video_path, f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ! (ID: {task_id})"
        else:
            return None, "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ."
            
    except Exception as e:
        return None, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"


def create_interface():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ Gradio –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    """
    with gr.Blocks(title="WAN 2.5 Video Generator (DashScope)", theme=gr.themes.Soft()) as demo:
        gr.Markdown(
            """
            # üé¨ WAN 2.5 Video Generator (DashScope SDK)
            
            –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ DashScope SDK –¥–ª—è Alibaba WAN 2.5.
            
            ## –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
            1. –ü–æ–ª—É—á–∏—Ç–µ API-–∫–ª—é—á DashScope (—Ñ–æ—Ä–º–∞—Ç sk-...)
            2. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à API-–∫–ª—é—á –≤ –ø–æ–ª–µ –Ω–∏–∂–µ
            3. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –≤–∏–¥–µ–æ
            4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            5. –ù–∞–∂–º–∏—Ç–µ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ"
            """
        )
        
        with gr.Row():
            with gr.Column(scale=1):
                gr.Markdown("### üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
                
                api_key = gr.Textbox(
                    label="API-–∫–ª—é—á DashScope",
                    placeholder="sk-************************",
                    type="password",
                    info="–ö–ª—é—á –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ DashScope API"
                )
                
                gr.Markdown("### üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
                
                prompt = gr.Textbox(
                    label="–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ (Prompt)",
                    placeholder="A serene sunset over the ocean with birds flying...",
                    lines=3,
                    info="–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤ –≤–∏–¥–µ–æ"
                )
                
                with gr.Row():
                    duration = gr.Slider(
                        label="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–µ–∫)",
                        minimum=1,
                        maximum=30,
                        value=5,
                        step=1
                    )
                    fps = gr.Slider(
                        label="FPS",
                        minimum=8,
                        maximum=60,
                        value=24,
                        step=1
                    )
                
                resolution = gr.Dropdown(
                    label="–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ",
                    choices=["512x512", "768x768", "1024x576", "1280x720", "1920x1080"],
                    value="1280x720"
                )
                
                seed = gr.Number(
                    label="Seed (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
                    value=-1,
                    precision=0,
                    info="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ -1 –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ seed"
                )
                
                generate_btn = gr.Button("üé¨ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ", variant="primary", size="lg")
            
            with gr.Column(scale=1):
                gr.Markdown("### üé• –†–µ–∑—É–ª—å—Ç–∞—Ç")
                
                output_video = gr.Video(label="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ")
                output_status = gr.Textbox(label="–°—Ç–∞—Ç—É—Å", lines=2)
                
                gr.Markdown(
                    """
                    ### üí° –°–æ–≤–µ—Ç—ã:
                    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                    - –ë–æ–ª—å—à–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤
                    - Seed –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    - API-–∫–ª—é—á DashScope –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "sk-"
                    """
                )
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫ –∫–Ω–æ–ø–∫–µ
        generate_btn.click(
            fn=generate_video,
            inputs=[api_key, prompt, duration, resolution, fps, seed],
            outputs=[output_video, output_status]
        )
        
        gr.Markdown(
            """
            ---
            ### üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
            - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π DashScope SDK
            - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API-–∫–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ WAN 2.5
            - –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ª–∏–º–∏—Ç—ã API
            - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://help.aliyun.com/zh/dashscope/
            """
        )
    
    return demo


if __name__ == "__main__":
    demo = create_interface()
    demo.launch(
        server_name="0.0.0.0",  # –î–æ—Å—Ç—É–ø –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
        server_port=7860,
        share=False,  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ True –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ Gradio
        show_error=True
    )
